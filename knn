#!/usr/bin/env python
# coding: utf-8

# In[108]:


import pandas as pd
import numpy as np


# In[109]:


df=pd.read_csv("D:\sandip sir 3rd sem lab\Social_Network_Ads.csv")
df.head()


# In[110]:


df=df.iloc[:,1:]           # Iloc use for seperating the column
df                       # Here we use all column except first column 


# In[111]:


from sklearn.preprocessing import LabelEncoder     # This is the package for label in  numeric assign 
encoder=LabelEncoder()
df['Gender']=encoder.fit_transform(df['Gender'])
print(df)


# In[ ]:





# In[114]:


X = df.iloc[:, 0:3].values
#X =scaler.fit_transform(X) 
print(X)


# In[116]:


y=df.iloc[:,-1].values
y


# In[119]:


from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=.2,random_state=2)


# In[120]:


print(X_train.shape,X_test.shape,y_train.shape,y_test.shape)


# In[122]:


from sklearn.preprocessing import StandardScaler
scaler= StandardScaler()
X_train=scaler.fit_transform(X_train)
X_test=scaler.transform(X_test)


# In[123]:


X_train.shape


# In[124]:


from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier(n_neighbors=5) 
knn.fit(X_train,y_train)


# In[125]:


from sklearn.metrics import accuracy_score ,classification_report
y_pred=knn.predict(X_test)
print(accuracy_score(y_pred,y_test))
print(classification_report(y_pred,y_test))


# In[ ]:





# In[ ]:




